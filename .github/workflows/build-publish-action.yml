name: Build and Publish
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.version }}" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            echo "Error: No version provided via input or git tag"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Determined version: $VERSION"
  
  build:
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - uses: actions/checkout@v4
      
      - name: Build with Docker
        run: |
          docker build \
            --build-arg GOOS=${{ matrix.os }} \
            --build-arg GOARCH=${{ matrix.arch }} \
            -t openapi-converter-builder:${{ matrix.os }}-${{ matrix.arch }} .
      
      - name: Extract binary from Docker
        run: |
          EXT=""
          if [[ "${{ matrix.os }}" == "windows" ]]; then
            EXT=.exe
          fi
          docker create --name temp-container openapi-converter-builder:${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p dist
          docker cp temp-container:/root/openapi-converter${EXT} ./dist/openapi-converter-${{ matrix.os }}-${{ matrix.arch }}${EXT}
          docker rm temp-container
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openapi-converter-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/openapi-converter-*
  
  publish:
    needs: [version, build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      
      - name: Prepare release assets
        run: |
          cd dist
          find . -type f -name 'openapi-converter-*' -exec mv {} . \; 2>/dev/null
          find . -type d -mindepth 1 -exec rm -rf {} \; 2>/dev/null || true
          ls -la
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version.outputs.version }}
          name: Release ${{ needs.version.outputs.version }}
          files: dist/openapi-converter-*
          body: |
            ## OpenAPI Converter ${{ needs.version.outputs.version }}
            
            ### Installation
            
            #### CLI Binary
            Download the appropriate binary for your platform from the assets below.
            
            #### Go Install
            ```bash
            go install github.com/nimling/openapi-converter@${{ needs.version.outputs.version }}
            ```
            
            #### GitHub Action
            ```yaml
            - uses: nimling/openapi-converter@${{ needs.version.outputs.version }}
              with:
                openapi-file: spec.yml
                docs-dir: output
                common-prefix: api
                write-introduction: true
            ```
            
            ### Full Changelog
            https://github.com/${{ github.repository }}/commits/${{ needs.version.outputs.version }}
          draft: false
          prerelease: false